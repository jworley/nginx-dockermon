<% var hostNames = _(containers)
    .where(function(c) {
      return !!c.env.VIRTUAL_HOST;
    })
    .map(function(container) {
      return _.map(container.env.VIRTUAL_HOST.split(','), function(host) {
        return {
          host: host,
          container: container
        };
      });
    }).flatten().groupBy(function(c) { return c.host; }).value();
%>server {
  listen 80 default_server;
  server_name _;
  error_log /proc/self/fd/2;
  access_log /proc/self/fd/1 vhosts;
  return 503;
}

<% _.forEach(hostNames, function(servers, hostName) { %>
upstream <%= hostName %> {
<% _.forEach(servers, function(server) { var c = server.container, a = c.addresses; %>
  <% if (a.length = 1) {%>
    # <%= c.name %>
    server <%= a[0].ipAddress + ':' + a[0].port %>;
  <% } else if (!!c.env.VIRTUAL_PORT) { var a1 = _.find(a, function(virtPort) { return virtPort.port === c.env.VIRTUAL_PORT; }); %>
    # <%= c.name %>
    server <%= a1.ipAddress + ':' + a1.port %>;
  <% } else { var a1 = _.find(a, function(virtPort) { return virtPort.port === '80'; }); %>
    # <%= c.name %>
    server <%= a1.ipAddress + ':' + a1.port %>;
  <% } %>
<% }); %>
    keepalive 64;
}

server {
  server_name <%= hostName %>;
  proxy_buffering off;
  error_log /proc/self/fd/2;
  access_log /proc/self/fd/1 vhosts;

  location / {
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_cache one;
    proxy_cache_key sfs$request_uri$scheme;
    proxy_pass http://<%= hostName %>;
  }
}
<% }); %>
